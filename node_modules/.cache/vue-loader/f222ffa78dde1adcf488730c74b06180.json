{"remainingRequest":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/views/Profile.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/views/Profile.vue","mtime":1603071037853},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnByb2ZpbGUgewogIG1hcmdpbi10b3A6IDIwcHg7CgogIGgxIHsKICAgIGNvbG9yOiAjZmE5YjAzOwogIH0KfQoKLm5hdi10YWJzIC5uYXYtbGluayB7CiAgY29sb3I6ICNmYTliMDM7Cn0KLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmUsIC5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmsgewogIGNvbG9yOiBibGFjazsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmE5YjAzOwp9CgoudGFiLWNvbnRlbnQgewogIGJhY2tncm91bmQ6ICNmYTliMDM7CiAgcGFkZGluZzogMjBweDsKICBtYXJnaW46IDA7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwOwogIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7Cn0KCi5pbWFnZS1jb250YWluZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtYXgtd2lkdGg6IDMwMHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgei1pbmRleDogMTA7CiAgaW1nIHsKICAgIG1heC13aWR0aDogMzAwcHg7CiAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgfQoKICAuZGVsZXRlIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAtNnB4OwogICAgdG9wOiAtOXB4OwogICAgYmFja2dyb3VuZDogcmVkOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgd2lkdGg6IDMwcHg7CiAgICBoZWlnaHQ6IDMwcHg7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwogIH0KfQo="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"profile view\">\n    <h1>Hamlin Halloween Pumpkin Upload</h1>\n    <b-tabs>\n        <b-tab title=\"Upload Pumpkins\">\n          <form\n              @submit.prevent=\"sendFile\"\n              enctype=\"multipart/form-data\"\n            >\n              <div class=\"field\">\n                <div class=\"file is-boxed is-primary\">\n                  <label class=\"file-label\">\n                      <input\n                        multiple\n                        type=\"file\"\n                        class=\"file-input\"\n                        ref=\"files\"\n                        @change=\"selectFile\"\n                      />\n                  </label>\n                </div>\n              </div>\n              <template\n                  v-for=\"(file, index) in files\"\n                >\n                <div\n                  class=\"image-container\"\n                  :key=\"index\"\n                >\n                  <img\n                    :src=\"file.url\"\n                  />\n                  <div\n                    :id=\"`tooltip-target-${index}`\"\n                    class=\"delete\"\n                    @click.prevent=\"\n                      files.splice(index, 1);\n                      uploadFiles.splice(index, 1)\"\n                  > <b-icon icon=\"x-circle-fill\" />\n                  <b-tooltip :target=\"`tooltip-target-${index}`\" triggers=\"hover\">\n                        Delete\n                  </b-tooltip>\n                  </div>\n                  <span\n                    v-if=\"file.invalidMessage\"\n                    style=\"color:red\">\n                    {{ file.invalidMessage }}\n                  </span>\n                </div>\n              </template>\n              <div class=\"field\">\n                <b-button\n                  type=\"submit\"\n                  variant=\"primary\"\n                >\n                  Upload\n                </b-button>\n                <p>{{ this.message }}</p>\n              </div>\n              </form>\n        </b-tab>\n\n        <b-tab title=\"Your Pumpkin Images\" lazy>\n              <b-button\n                type=\"submit\"\n                variant=\"primary\"\n                :disabled=\"!deleteImageId.length > 0\"\n                @click.prevent=\"saveDeletedImages()\"\n              >\n              Delete Selected Images {{ deleteImageId.length || '' }}\n              </b-button>\n\n            <template v-for=\"(image, index) in userImages\">\n                <div\n                  class=\"image-container\"\n                  :key=\"index\"\n                >\n                <img :src=\"`http://localhost:2121/${image.image_name}`\" />\n                <div\n                  class=\"delete\"\n                  @click.prevent=\"userImages.splice(index, 1);deleteImage(image.id);\"><b-icon icon=\"x-circle-fill\" />\n                </div>\n                </div>\n            </template>\n        </b-tab>\n\n      </b-tabs>\n\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport _ from 'lodash';\n\n@Component\nexport default class Profile extends Vue {\n\n  private files = [];\n\n  private uploadFiles = [];\n\n  private message = '';\n\n  private imgURL = [];\n\n  private yourImages = [];\n\n  private deleteImageId = [];\n\n  private get user() {\n    return this.$store.getters.user;\n  }\n\n  private get getUserId(): boolean {\n    return this.$store.getters.getUserId;\n  }\n\n  private get userImages() {\n    return this.$store.getters.userImage;\n  }\n\n  private selectFile(): void {\n    const { files } = this.$refs.files;\n    this.uploadFiles = [...this.files, ...files];\n\n    this.files = [\n      ...this.files,\n      ..._.map(files, (file) => ({\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        url: URL.createObjectURL(file),\n        invalidMessage: this.validateFile(file),\n      })),\n    ];\n  }\n\n  private validateFile(file): String {\n    const MAX_SIZE = 20000000;\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\n\n    if (file.size > MAX_SIZE) {\n      return `max size: ${MAX_SIZE / 100}kb`;\n    }\n\n    if (!allowedTypes.includes(file.type)) {\n      return 'Please use only .jpg, .png or .gif file types';\n    }\n\n    return '';\n  }\n\n  private async sendFile(): Promise<void> {\n    const formData = new FormData();\n    this.uploadFiles.userId = this.getUserId;\n    _.forEach(this.uploadFiles, (file) => {\n      if (this.validateFile(file) === '') {\n        formData.append('files', file);\n      }\n    });\n    try {\n      await this.$store.dispatch('upload', formData);\n      this.message = 'Files uploaded';\n      this.files = [];\n      this.uploadFiles = [];\n      this.grabTokenAndUserData();\n    } catch (err) {\n      console.log(err, 'err');\n      this.message = 'Error';\n    }\n  }\n\n  deleteImage(id): void {\n    this.deleteImageId.push(id);\n  }\n\n  async saveDeletedImages(): Promise<void> {\n    const payload = {\n      imageIds: this.deleteImageId,\n      userId: this.getUserId,\n    };\n    await this.$store.dispatch('deleteImages', payload);\n    this.deleteImageId = [];\n  }\n\n  private grabTokenAndUserData(): void {\n    this.$store.dispatch('fetchUserData');\n  }\n\n  private created(): void {\n    this.grabTokenAndUserData();\n  }\n\n  private destroy(): void {\n    this.deleteImageId = [];\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .profile {\n    margin-top: 20px;\n\n    h1 {\n      color: #fa9b03;\n    }\n  }\n\n  .nav-tabs .nav-link {\n    color: #fa9b03;\n  }\n  .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link {\n    color: black;\n    background-color: #fa9b03;\n  }\n\n  .tab-content {\n    background: #fa9b03;\n    padding: 20px;\n    margin: 0;\n    border-radius: 5px;\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n  }\n\n  .image-container {\n    position: relative;\n    max-width: 300px;\n    margin-bottom: 20px;\n    z-index: 10;\n    img {\n      max-width: 300px;\n      border-radius: 5px;\n    }\n\n    .delete {\n      position: absolute;\n      right: -6px;\n      top: -9px;\n      background: red;\n      border-radius: 50%;\n      width: 30px;\n      height: 30px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n    }\n  }\n</style>\n"]}]}