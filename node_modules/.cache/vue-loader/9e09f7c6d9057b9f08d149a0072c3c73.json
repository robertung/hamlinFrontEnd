{"remainingRequest":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/views/Profile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/views/Profile.vue","mtime":1602822736576},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwoKQENvbXBvbmVudApleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9maWxlIGV4dGVuZHMgVnVlIHsKICAvLyBwdWJsaWMgJHJlZnMhOiB7IGZpbGVzJzogSFRNTEVsZW1lbnQgfQoKICBwcml2YXRlIGZpbGVzID0gW107CgogIHByaXZhdGUgdXBsb2FkRmlsZXMgPSBbXTsKCiAgcHJpdmF0ZSBtZXNzYWdlID0gJyc7CgogIHNlbGVjdEZpbGUoKSB7CiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1pZ25vcmUKICAgIGNvbnN0IGZpbGVzID0gdGhpcy4kcmVmcy5maWxlcy5maWxlczsKICAgIHRoaXMudXBsb2FkRmlsZXMgPSBbLi4udGhpcy5maWxlcywgLi4uZmlsZXNdOwoKICAgIHRoaXMuZmlsZXMgPSBbCiAgICAgIC4uLnRoaXMuZmlsZXMsCiAgICAgIC4uLl8ubWFwKGZpbGVzLCBmaWxlID0+ICh7CiAgICAgICAgbmFtZTogZmlsZS5uYW1lLAogICAgICAgIHNpemU6IGZpbGUuc2l6ZSwKICAgICAgICB0eXBlOiBmaWxlLnR5cGUsCiAgICAgICAgaW52YWxpZE1lc3NhZ2U6IHRoaXMudmFsaWRhdGUoZmlsZSksCiAgICAgIH0pKQogICAgXQogIH0KCiAgdmFsaWRhdGUoZmlsZSkgewogICAgY29uc3QgTUFYX1NJWkUgPSAyMDAwMDAwMDsKICAgIGNvbnN0IGFsbG93ZWRUeXBlcyA9IFsnaW1hZ2UvanBlZycsICdpbWFnZS9wbmcnLCAnaW1hZ2UvZ2lmJ107CgogICAgaWYgKGZpbGUuc2l6ZSA+IE1BWF9TSVpFKSB7CiAgICAgIHJldHVybmBtYXggc2l6ZTogJHtNQVhfU0laRS8xMDB9a2JgOwogICAgfQoKICAgIGlmICghYWxsb3dlZFR5cGVzLmluY2x1ZGVzKGZpbGUudHlwZSkpIHsKICAgICAgcmV0dXJuICdQbGVhc2UgdXNlIG9ubHkgLmpwZywgLnBuZyBvciAuZ2lmIGZpbGUgdHlwZXMnOwogICAgfQogICAgcmV0dXJuICcnOwogIH0KCiAgYXN5bmMgc2VuZEZpbGUoKSB7CiAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwoKICAgIF8uZm9yRWFjaCh0aGlzLnVwbG9hZEZpbGVzLCBmaWxlID0+IHsKICAgICAgaWYgKHRoaXMudmFsaWRhdGUoZmlsZSkgPT09ICcnKSB7CiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlcycsIGZpbGUpOwogICAgICB9CiAgICB9KTsKICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWlnbm9yZQogICAgdHJ5IHsKICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3VwbG9hZCcsIGZvcm1EYXRhKTsKICAgICAgdGhpcy5tZXNzYWdlID0gJ0ZpbGVzIHVwbG9hZGVkJzsKICAgICAgdGhpcy5maWxlcyA9IFtdOwogICAgICB0aGlzLnVwbG9hZEZpbGVzID0gW107CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc29sZS5sb2coZXJyLCAnZXJyJyk7CiAgICAgIHRoaXMubWVzc2FnZSA9ICdFcnJvcic7CiAgICB9CiAgfQoKICAvLyBvbkZpbGVDaGFuZ2UoZSkgewogIC8vICAgY29uc3QgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogIC8vICAgdGhpcy51cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGZpbGUpOwogIC8vICAgY29uc29sZS5sb2coeyAxOiBlLnRhcmdldC5maWxlc1swXSwgMjogdGhpcy51cmwgfSwgJ2UnKTsKICAvLyB9CgogIC8vIHByaXZhdGUgZm9ybWF0TmFtZXMoZmlsZXMpOiB2b2lkIHsKICAvLyAgIHJldHVybiBmaWxlcy5sZW5ndGggPT09IDEgPyBmaWxlc1swXS5uYW1lIDogYCR7ZmlsZXMubGVuZ3RofSBmaWxlcyBzZWxlY3RlZGAKICAvLyB9Cn0K"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"sponsers\">\n    <h4>Upload Pumpkins</h4>\n    <!-- <form @submit.prevent=\"sendFile\" enctype=\"multipart/form-data\">\n      <div class=\"field\">\n        <div class=\"file is-boxed is-primary\">\n          <label class=\"file-label\">\n              <input\n                type=\"file\"\n                class=\"file-input\"\n                ref=\"file\"\n                @change=\"selected\"\n              />\n          </label>\n        </div>\n      </div>\n\n      <div class=\"field\">\n        <button class=\"button is-info\">Send</button>\n      </div>\n    </form> -->\n    <form @submit.prevent=\"sendFile\" enctype=\"multipart/form-data\">\n      <div class=\"field\">\n        <div class=\"file is-boxed is-primary\">\n          <label class=\"file-label\">\n              <input\n                multiple\n                type=\"file\"\n                class=\"file-input\"\n                ref=\"files\"\n                @change=\"selectFile\"\n              />\n          </label>\n        </div>\n      </div>\n      <template v-for=\"(file, index) in files\">\n        <div :key=\"index\">\n          <!-- <img :src=\"file[index].name\"/> -->\n          <p>{{ file.name }} <div class=\"delete\" @click.prevent=\"files.splice(index, 1);uploadFiles.splice(index, 1)\">delete</div></p>\n          <span style=\"color:red\" v-if=\"file.invalidMessage\"> {{ file.invalidMessage }}</span>\n          <!-- <img :src=\"file.name\"> -->\n          <!-- <div class=\"delete\" @click.prevent=\"files.splice(index, 1)\">delete</div> -->\n        </div>\n      </template>\n      <div class=\"field\">\n        <button class=\"button is-info\">Send</button>\n        <p>{{ this.message }}</p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport _ from 'lodash';\n\n@Component\nexport default class Profile extends Vue {\n  // public $refs!: { files': HTMLElement }\n\n  private files = [];\n\n  private uploadFiles = [];\n\n  private message = '';\n\n  selectFile() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    const files = this.$refs.files.files;\n    this.uploadFiles = [...this.files, ...files];\n\n    this.files = [\n      ...this.files,\n      ..._.map(files, file => ({\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        invalidMessage: this.validate(file),\n      }))\n    ]\n  }\n\n  validate(file) {\n    const MAX_SIZE = 20000000;\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\n\n    if (file.size > MAX_SIZE) {\n      return`max size: ${MAX_SIZE/100}kb`;\n    }\n\n    if (!allowedTypes.includes(file.type)) {\n      return 'Please use only .jpg, .png or .gif file types';\n    }\n    return '';\n  }\n\n  async sendFile() {\n    const formData = new FormData();\n\n    _.forEach(this.uploadFiles, file => {\n      if (this.validate(file) === '') {\n        formData.append('files', file);\n      }\n    });\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    try {\n      await this.$store.dispatch('upload', formData);\n      this.message = 'Files uploaded';\n      this.files = [];\n      this.uploadFiles = [];\n    } catch (err) {\n      console.log(err, 'err');\n      this.message = 'Error';\n    }\n  }\n\n  // onFileChange(e) {\n  //   const file = e.target.files[0];\n  //   this.url = URL.createObjectURL(file);\n  //   console.log({ 1: e.target.files[0], 2: this.url }, 'e');\n  // }\n\n  // private formatNames(files): void {\n  //   return files.length === 1 ? files[0].name : `${files.length} files selected`\n  // }\n}\n</script>"]}]}