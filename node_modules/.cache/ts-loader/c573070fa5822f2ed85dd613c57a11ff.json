{"remainingRequest":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/babel-loader/lib/index.js!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/ts-loader/index.js??ref--14-2!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/store/common.ts","dependencies":[{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/store/common.ts","mtime":1602652001786},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCAqIGFzIGxvY2FsRm9yYWdlIGZyb20gJ2xvY2FsZm9yYWdlJzsKdmFyIGFwaURvbWFpbiA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQVBJX0RPTUFJTjsKZXhwb3J0IGZ1bmN0aW9uIGFwaVB1dCh1cmwsIGRhdGEpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgbG9jYWxGb3JhZ2UuZ2V0SXRlbSgnYWNjZXNzX3Rva2VuJykudGhlbihmdW5jdGlvbiAodXNlclRva2VucykgewogICAgICB2YXIgZGF0YVFTID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICAgIGF4aW9zKHsKICAgICAgICBtZXRob2Q6ICdQVVQnLAogICAgICAgIHVybDogIiIuY29uY2F0KGFwaURvbWFpbiwgIi9hcGkvIikuY29uY2F0KHVybCksCiAgICAgICAgZGF0YTogZGF0YVFTLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICIiLmNvbmNhdCh1c2VyVG9rZW5zLmFjY2Vzc190b2tlbiksCiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IucmVzcG9uc2UpOwogICAgICB9KTsKICAgIH0pOwogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBhcGlQb3N0KHVybCwgZGF0YSkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBsb2NhbEZvcmFnZS5nZXRJdGVtKCdhY2Nlc3NfdG9rZW4nKS50aGVuKGZ1bmN0aW9uICh1c2VyVG9rZW5zKSB7CiAgICAgIHZhciBkYXRhUVMgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIHVybDogIiIuY29uY2F0KGFwaURvbWFpbiwgIi9hcGkvIikuY29uY2F0KHVybCksCiAgICAgICAgZGF0YTogZGF0YVFTLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICIiLmNvbmNhdCh1c2VyVG9rZW5zLmFjY2Vzc190b2tlbiksCiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IucmVzcG9uc2UpOwogICAgICB9KTsKICAgIH0pOwogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBhcGlEZWxldGUodXJsLCBkYXRhKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGxvY2FsRm9yYWdlLmdldEl0ZW0oJ2FjY2Vzc190b2tlbicpLnRoZW4oZnVuY3Rpb24gKHVzZXJUb2tlbnMpIHsKICAgICAgdmFyIGRhdGFRUyA9IEpTT04uc3RyaW5naWZ5KGRhdGEpOwogICAgICBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAnREVMRVRFJywKICAgICAgICB1cmw6ICIiLmNvbmNhdChhcGlEb21haW4sICIvYXBpLyIpLmNvbmNhdCh1cmwpLAogICAgICAgIGRhdGE6IGRhdGFRUywKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHVzZXJUb2tlbnMuYWNjZXNzX3Rva2VuKSwKICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvci5yZXNwb25zZSk7CiAgICAgIH0pOwogICAgfSk7CiAgfSk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGFwaUdldE5vbmUodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgY29uc29sZS5sb2coYXBpRG9tYWluLCAnZW52Jyk7CiAgICB2YXIgZGF0YVFTID0gSlNPTi5zdHJpbmdpZnkocGFyYW1zKTsKICAgIGF4aW9zKHsKICAgICAgbWV0aG9kOiAnR0VUJywKICAgICAgdXJsOiAiIi5jb25jYXQoYXBpRG9tYWluLCAiLyIpLmNvbmNhdCh1cmwpLAogICAgICBkYXRhOiBkYXRhUVMsCiAgICAgIGhlYWRlcnM6IHsKICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgIH0KICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvci5yZXNwb25zZSk7CiAgICB9KTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gYXBpR2V0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGxvY2FsRm9yYWdlLmdldEl0ZW0oJ2FjY2Vzc190b2tlbicpLnRoZW4oZnVuY3Rpb24gKHVzZXJUb2tlbnMpIHsKICAgICAgdmFyIGRhdGFRUyA9IEpTT04uc3RyaW5naWZ5KHBhcmFtcyk7CiAgICAgIGF4aW9zKHsKICAgICAgICBtZXRob2Q6ICdHRVQnLAogICAgICAgIHVybDogIiIuY29uY2F0KGFwaURvbWFpbiwgIi9hcGkvIikuY29uY2F0KHVybCksCiAgICAgICAgZGF0YTogZGF0YVFTLAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodXNlclRva2Vucy5hY2Nlc3NfdG9rZW4pLAogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yLnJlc3BvbnNlKTsKICAgICAgfSk7CiAgICB9KTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gYXBpTG9naW4ocGF5bG9hZCkgewogIHZhciBlbWFpbCA9IHBheWxvYWQuZW1haWwsCiAgICAgIHBhc3N3b3JkID0gcGF5bG9hZC5wYXNzd29yZDsKICBjb25zb2xlLmxvZyhwYXlsb2FkLCAncGF5bG9hZCcpOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBheGlvcyh7CiAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICB1cmw6ICIiLmNvbmNhdChhcGlEb21haW4sICIvbG9naW4iKSwKICAgICAgaGVhZGVyczogewogICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcKICAgICAgfSwKICAgICAgZGF0YTogewogICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICBwYXNzd29yZDogcGFzc3dvcmQKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgbG9jYWxGb3JhZ2Uuc2V0SXRlbSgnYWNjZXNzX3Rva2VuJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgIHJlc29sdmUocmVzcG9uc2UpOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIHJlamVjdChlcnJvci5yZXNwb25zZSk7CiAgICB9KTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gYXBpUmVmcmVzaChwYXlsb2FkKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIGF4aW9zKHsKICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgIHVybDogIiIuY29uY2F0KHByb2Nlc3MuZW52LkFQSV9CQVNFX1VSTCwgIm9hdXRoL3Rva2VuIiksCiAgICAgIGRhdGE6IHsKICAgICAgICBncmFudF90eXBlOiBwcm9jZXNzLmVudi5PQVVUSF9SRUZSRVNIX0dSQU5UX1RZUEUsCiAgICAgICAgY2xpZW50X2lkOiBwcm9jZXNzLmVudi5PQVVUSF9DTElFTlRfSUQsCiAgICAgICAgY2xpZW50X3NlY3JldDogcHJvY2Vzcy5lbnYuT0FVVEhfQ0xJRU5UX1NFQ1JFVCwKICAgICAgICByZWZyZXNoX3Rva2VuOiBwYXlsb2FkLnJlZnJlc2hUb2tlbgogICAgICB9CiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICByZWplY3QoZXJyb3IucmVzcG9uc2UpOwogICAgfSk7CiAgfSk7Cn0KZXhwb3J0IGRlZmF1bHQgewogIGFwaVB1dDogYXBpUHV0LAogIGFwaVBvc3Q6IGFwaVBvc3QsCiAgYXBpRGVsZXRlOiBhcGlEZWxldGUsCiAgYXBpR2V0OiBhcGlHZXQsCiAgYXBpR2V0Tm9uZTogYXBpR2V0Tm9uZSwKICBhcGlMb2dpbjogYXBpTG9naW4sCiAgYXBpUmVmcmVzaDogYXBpUmVmcmVzaAp9Ow=="},{"version":3,"sources":["/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/rothasar/Documents/workspace/hamlinstreethorror/hamlinhorrorstreet-frontend/src/store/common.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as localForage from 'localforage';\n\nconst apiDomain = process.env.VUE_APP_API_DOMAIN;\n\nexport function apiPut(url: string, data: {}) {\n  return new Promise((resolve, reject) => {\n    localForage.getItem('access_token').then((userTokens: any) => {\n      const dataQS = JSON.stringify(data);\n      axios({\n        method: 'PUT',\n        url: `${apiDomain}/api/${url}`,\n        data: dataQS,\n        headers: {\n          Authorization: `${userTokens.access_token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => {\n        \tresolve(response);\n        })\n        .catch((error) => {\n        \treject(error.response);\n        });\n    });\n  });\n}\n\nexport function apiPost(url: string, data: {}) {\n  return new Promise((resolve, reject) => {\n    localForage.getItem('access_token').then((userTokens: any) => {\n      const dataQS = JSON.stringify(data);\n      axios({\n        method: 'POST',\n        url: `${apiDomain}/api/${url}`,\n        data: dataQS,\n        headers: {\n        \tAuthorization: `${userTokens.access_token}`,\n        \t'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => {\n        \tresolve(response);\n        })\n        .catch((error) => {\n        \treject(error.response);\n        });\n    });\n  });\n}\n\nexport function apiDelete(url: string, data: {}) {\n  return new Promise((resolve, reject) => {\n    localForage.getItem('access_token').then((userTokens: any) => {\n      const dataQS = JSON.stringify(data);\n      axios({\n        method: 'DELETE',\n        url: `${apiDomain}/api/${url}`,\n        data: dataQS,\n        headers: {\n          Authorization: `Bearer ${userTokens.access_token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => {\n        \tresolve(response);\n        })\n        .catch((error) => {\n        \treject(error.response);\n        });\n    });\n  });\n}\n\nexport function apiGetNone(url: string, params: {}) {\n  return new Promise((resolve, reject) => {\n    console.log(apiDomain, 'env');\n    const dataQS = JSON.stringify(params);\n    axios({\n      method: 'GET',\n      url: `${apiDomain}/${url}`,\n      data: dataQS,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error.response);\n      });\n  });\n}\n\nexport function apiGet(url: string, params: {}) {\n  return new Promise((resolve, reject) => {\n    localForage.getItem('access_token').then((userTokens) => {\n      const dataQS = JSON.stringify(params);\n      axios({\n        method: 'GET',\n        url: `${apiDomain}/api/${url}`,\n        data: dataQS,\n        headers: {\n          Authorization: `Bearer ${userTokens.access_token}`,\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => {\n        \tresolve(response);\n        })\n        .catch((error) => {\n        \treject(error.response);\n        });\n    });\n  });\n}\n\nexport function apiLogin(payload) {\n  const { email, password } = payload;\n  console.log(payload, 'payload');\n  return new Promise((resolve, reject) => {\n    axios({\n      method: 'POST',\n      url: `${apiDomain}/login`,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n      data: {\n    \temail,\n        password,\n\t  },\n    })\n      .then((response) => {\n        localForage.setItem('access_token', response.data);\n    \tresolve(response);\n      })\n      .catch((error) => {\n    \treject(error.response);\n      });\n  });\n}\n\nexport function apiRefresh(payload: any) {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: 'POST',\n      url: `${process.env.API_BASE_URL}oauth/token`,\n      data: {\n        grant_type: process.env.OAUTH_REFRESH_GRANT_TYPE,\n        client_id: process.env.OAUTH_CLIENT_ID,\n        client_secret: process.env.OAUTH_CLIENT_SECRET,\n        refresh_token: payload.refreshToken,\n      },\n    })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error.response);\n      });\n  });\n}\n\nexport default {\n  apiPut,\n  apiPost,\n  apiDelete,\n  apiGet,\n  apiGetNone,\n  apiLogin,\n  apiRefresh,\n};\n"],"sourceRoot":""}]}